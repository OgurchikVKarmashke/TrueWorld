# achievements_menu.py
# ui.achievements_menu.pyf
from ui.ui_utils import print_header, press_enter_to_continue
from ui.visual_effects import VisualEffects
from ui.sound_system import SoundSystem

def achievements_menu(game_state):
    """–ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    achievement_system = game_state["achievement_system"]
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    sound_system = SoundSystem()
    sound_system.load_sounds()
    
    while True:
        completed_count = achievement_system.get_completed_count()
        total_count = achievement_system.get_total_count()
        
        print_header(VisualEffects.glowing_text("üèÜ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"))
        print(f"üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {VisualEffects.progress_bar(completed_count, total_count)}")
        print()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
        completed = []
        not_completed = []
        
        for achievement in achievement_system.achievements.values():
            if achievement.completed:
                completed.append(achievement)
            else:
                not_completed.append(achievement)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
        if completed:
            print(VisualEffects.glowing_text("‚úÖ –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø"))
            for achievement in completed:
                date_str = achievement.completed_date.strftime("%d.%m.%Y") if achievement.completed_date else ""
                reward_text = f"+{achievement.reward_value} {achievement.reward_type}"
                print(f"üèÜ {achievement.name} - {reward_text} {date_str}")
                print(f"   {achievement.description}")
            print()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if not_completed:
            print("üîí –ü–†–ï–î–°–¢–û–Ø–©–ò–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:")
            for achievement in not_completed:
                print(f"üîí {achievement.name}")
                print(f"   {achievement.description}")
                print(f"   –ù–∞–≥—Ä–∞–¥–∞: +{achievement.reward_value} {achievement.reward_type}")
                print()
            
            print()

        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        print()

        try:
            choice = int(input("üéØ –í–∞—à –≤—ã–±–æ—Ä: "))
            sound_system.play_sound('button_click')
            
            if choice == 0:
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
                press_enter_to_continue()
                
        except ValueError:
            sound_system.play_sound('error')
            print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
            press_enter_to_continue()

def show_achievement_notification(new_achievements):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"""
    if new_achievements:
        sound_system = SoundSystem()
        sound_system.load_sounds()
        sound_system.play_sound('achievement')
        
        VisualEffects.achievement_unlock_effect("–ù–û–í–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø!")
        print("‚ïê" * 40)
        
        for i, achievement in enumerate(new_achievements):
            reward_text = f"+{achievement.reward_value} {achievement.reward_type}"
            print(f"üèÜ {VisualEffects.glowing_text(achievement.name)}")
            print(f"   {achievement.description}")
            print(f"   –ù–∞–≥—Ä–∞–¥–∞: {reward_text}")
            if i == 0:  # –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                VisualEffects.sparkle_effect()
            print()
        
        press_enter_to_continue()