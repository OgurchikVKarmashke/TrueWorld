# synthesis_room_menu.py
# ui.synthesis_room_menu.py
from ui.ui_utils import print_header, press_enter_to_continue, loading_screen
from systems.synthesis_room_system import synthesize_heroes, get_available_heroes

def manage_synthesis(game_state):
    """
    –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ —Å–∏–Ω—Ç–µ–∑–∞ - –≤–∏–∑—É–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å
    """
    heroes = game_state["heroes"]
    if len(heroes) < 2:
        print_header("‚öóÔ∏è –ö–û–ú–ù–ê–¢–ê –°–ò–ù–¢–ï–ó–ê")
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2)")
        press_enter_to_continue()
        return

    while True:
        print_header("‚öóÔ∏è –ö–û–ú–ù–ê–¢–ê –°–ò–ù–¢–ï–óA")
        print("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è:")
        print("‚ïê" * 40)
        
        # –ö–Ω–æ–ø–∫–∞ 0 - –æ—Ç–º–µ–Ω–∞
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        # –ì–µ—Ä–æ–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 2
        for i, hero in enumerate(heroes, 2):
            star_symbol = "‚òÖ" * hero.star
            print(f"{i}. {hero.name} {star_symbol} (–£—Ä. {hero.level})")
        print()
        
        try:
            choice = int(input("üéØ –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è: "))
        except ValueError:
            continue
            
        if choice == 0:
            return
        if 2 <= choice <= len(heroes) + 1:
            base_hero = heroes[choice - 2]  # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            press_enter_to_continue()
    
    # –í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –¥–ª—è –∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏—è
    sacrifices = []
    while True:
        print_header("‚öóÔ∏è –ö–û–ú–ù–ê–¢–ê –°–ò–ù–¢–ï–ó–ê")
        print(f"–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ—Ä–æ–π: {base_hero.name} (–£—Ä. {base_hero.level})")
        print("–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
        print("‚ïê" * 40)
        
        available_heroes = get_available_heroes(heroes, base_hero, sacrifices)
        
        if not available_heroes:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞!")
            press_enter_to_continue()
            break
            
        # –ö–Ω–æ–ø–∫–∞ 0 - –æ—Ç–º–µ–Ω–∞, 1 - –∑–∞–≤–µ—Ä—à–∏—Ç—å
        print("0. ‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞")
        print("1. ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä")
        
        # –ì–µ—Ä–æ–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 2
        for i, hero in enumerate(available_heroes, 2):
            star_symbol = "‚òÖ" * hero.star
            print(f"{i}. {hero.name} {star_symbol} (–£—Ä. {hero.level})")
        print()
        
        try:
            choice = input("üéØ –í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤: ")
            if choice == "0":
                return
            elif choice == "1":
                break
            else:
                indices = [int(idx.strip()) for idx in choice.split(",") if idx.strip().isdigit()]
                for idx in indices:
                    if idx >= 2:  # –¢–æ–ª—å–∫–æ –≥–µ—Ä–æ–∏ (–Ω–∞—á–∏–Ω–∞—è —Å 2)
                        adjusted_idx = idx - 2  # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å
                        if 0 <= adjusted_idx < len(available_heroes):
                            sacrifice = available_heroes[adjusted_idx]
                            if sacrifice not in sacrifices:
                                sacrifices.append(sacrifice)
                                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {sacrifice.name}")
        except ValueError:
            continue
    
    if not sacrifices:
        print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–æ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞!")
        press_enter_to_continue()
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    show_synthesis_preview(base_hero, sacrifices)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if confirm_synthesis():
        loading_screen(2, "üåÄ –ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ç–µ–∑–∞")
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ç–µ–∑
        result_message, stat_improved = synthesize_heroes(game_state, base_hero, sacrifices)
        show_synthesis_result(result_message, stat_improved, len(sacrifices))
    
    press_enter_to_continue()

def show_synthesis_preview(base_hero, sacrifices):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–∏–Ω—Ç–µ–∑–∞"""
    print_header("‚öóÔ∏è –ü–†–û–¶–ï–°–° –°–ò–ù–¢–ï–ó–ê")
    print(f"–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ—Ä–æ–π: {base_hero.name}")
    print("–ñ–µ—Ä—Ç–≤—ã:")
    for hero in sacrifices:
        print(f"   - {hero.name} (–£—Ä. {hero.level})")
    print()
    
    # –†–∞—Å—á–µ—Ç –±–æ–Ω—É—Å–æ–≤
    total_exp = sum(hero.level * 50 for hero in sacrifices)
    stat_bonus_chance = 0.1 * len(sacrifices)  # 10% –∑–∞ –∫–∞–∂–¥–æ–≥–æ –≥–µ—Ä–æ—è
    
    print(f"üìà –ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: {total_exp}")
    print(f"üé≤ –®–∞–Ω—Å —É—Å–∏–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {stat_bonus_chance*100:.1f}%")
    print()

def confirm_synthesis():
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–∏–Ω—Ç–µ–∑–∞"""
    print("1. ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–∏–Ω—Ç–µ–∑")
    print("0. ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    print()
    
    try:
        confirm = int(input("üéØ –í–∞—à –≤—ã–±–æ—Ä: "))
        return confirm == 1
    except ValueError:
        print("‚ùå –°–∏–Ω—Ç–µ–∑ –æ—Ç–º–µ–Ω—ë–Ω")
        return False

def show_synthesis_result(result_message, stat_improved, sacrifices_count):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ç–µ–∑–∞"""
    print(result_message)
    print(f"‚úÖ –°–∏–Ω—Ç–µ–∑ –∑–∞–≤–µ—Ä—à—ë–Ω! –£–¥–∞–ª–µ–Ω–æ –≥–µ—Ä–æ–µ–≤: {sacrifices_count}")
    if stat_improved:
        print("üéâ –ü–æ–ª—É—á–µ–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏!")