# synthesis_room_menu.py
# ui.synthesis_room_menu.py
from ui.ui_utils import print_header, press_enter_to_continue, loading_screen
from systems.party_system import PartySystem
from systems.synthesis_room_system import synthesize_heroes, get_available_heroes
from ui.visual_effects import VisualEffects 

def manage_synthesis(game_state):
    """
    –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ —Å–∏–Ω—Ç–µ–∑–∞ - –±–æ–ª–µ–µ –ª–æ–≥–∏—á–Ω–æ–µ –º–µ–Ω—é
    """
    # –û—á–∏—â–∞–µ–º –º—ë—Ä—Ç–≤—ã—Ö –≥–µ—Ä–æ–µ–≤ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
    PartySystem(game_state).cleanup_dead_heroes()
    
    heroes = [hero for hero in game_state["heroes"] if hero.is_alive]  # –¢–æ–ª—å–∫–æ –∂–∏–≤—ã–µ –≥–µ—Ä–æ–∏
    
    if len(heroes) < 2:
        print_header("‚öóÔ∏è –ö–û–ú–ù–ê–¢–ê –°–ò–ù–¢–ï–ó–ê")
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2)")
        press_enter_to_continue()
        return

    while True:
        print_header("‚öóÔ∏è –ö–û–ú–ù–ê–¢–ê –°–ò–ù–¢–ï–ó–ê")
        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("‚ïê" * 40)
        print("1. üéØ –í—ã–±—Ä–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è")
        print("2. üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤")
        print("0. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
        print("‚ïê" * 40)
        
        try:
            choice = input("üéØ –í–∞—à –≤—ã–±–æ—Ä: ").strip()
            
            if choice == "0":
                return
            elif choice == "1":
                if select_base_hero_and_sacrifices(game_state, heroes):
                    return  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞
            elif choice == "2":
                show_all_available_heroes(heroes)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                press_enter_to_continue()
                
        except (ValueError, KeyboardInterrupt):
            print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            press_enter_to_continue()

def select_base_hero_and_sacrifices(game_state, heroes):
    """–í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –∏ –∂–µ—Ä—Ç–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞"""
    # –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è
    base_hero = select_base_hero(heroes)
    if base_hero is None:
        return False
    
    # –í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –¥–ª—è –∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏—è
    sacrifices = select_sacrifice_heroes(heroes, base_hero)
    if sacrifices is None:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª
        return False
    
    if not sacrifices:
        print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–æ –≥–µ—Ä–æ–µ–≤ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞!")
        press_enter_to_continue()
        return False
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    show_synthesis_preview(base_hero, sacrifices)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if confirm_synthesis():
        loading_screen(2, "üåÄ –ü—Ä–æ—Ü–µ—Å—Å —Å–∏–Ω—Ç–µ–∑–∞")
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∏–Ω—Ç–µ–∑
        result_message, stat_improved = synthesize_heroes(game_state, base_hero, sacrifices)
        show_synthesis_result(result_message, stat_improved, len(sacrifices))
        # –û—á–∏—â–∞–µ–º –º—ë—Ä—Ç–≤—ã—Ö –≥–µ—Ä–æ–µ–≤ –ø–æ—Å–ª–µ —Å–∏–Ω—Ç–µ–∑–∞
        PartySystem(game_state).cleanup_dead_heroes()
        press_enter_to_continue()
        return True
    
    return False

def select_base_hero(heroes):
    """–í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è"""
    while True:
        print_header("üéØ –í–´–ë–û–† –û–°–ù–û–í–ù–û–ì–û –ì–ï–†–û–Ø")
        print("–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É—Å–∏–ª–∏—Ç—å:")
        print("‚ïê" * 40)
        
        # –ö–Ω–æ–ø–∫–∞ 0 - –æ—Ç–º–µ–Ω–∞
        print("0. ‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥–µ—Ä–æ–µ–≤ –ø–æ —É—Ä–æ–≤–Ω—é –∏ –∑–≤–µ–∑–¥–∞–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        sorted_heroes = sorted(heroes, key=lambda x: (x.star, x.level), reverse=True)
        
        for i, hero in enumerate(sorted_heroes, 1):
            star_display = VisualEffects.get_star_display(hero.star)
            # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
            name_padding = 20 - len(hero.name)
            print(f"{i}. {hero.name}{' ' * name_padding}{star_display} (–£—Ä. {hero.level})")
        print()
        
        try:
            choice = input("üéØ –í—ã–±–æ—Ä –≥–µ—Ä–æ—è: ").strip()
            
            if choice == "0":
                return None
                
            choice_num = int(choice)
            if 1 <= choice_num <= len(sorted_heroes):
                return sorted_heroes[choice_num - 1]
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                press_enter_to_continue()
                
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
            press_enter_to_continue()

def select_sacrifice_heroes(heroes, base_hero):
    """–í—ã–±–æ—Ä –≥–µ—Ä–æ–µ–≤ –¥–ª—è –∂–µ—Ä—Ç–≤–æ–ø—Ä–∏–Ω–æ—à–µ–Ω–∏—è"""
    sacrifices = []
    
    while True:
        print_header("üî• –í–´–ë–û–† –ì–ï–†–û–ï–í –î–õ–Ø –°–ò–ù–¢–ï–ó–ê")
        print(f"–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ—Ä–æ–π: {base_hero.name} (–£—Ä. {base_hero.level})")
        print(f"–í—ã–±—Ä–∞–Ω–æ –∂–µ—Ä—Ç–≤: {len(sacrifices)}")
        print("‚ïê" * 40)
        
        available_heroes = get_available_heroes(heroes, base_hero, sacrifices)
        
        if not available_heroes:
            print("‚ùå –í—Å–µ –≥–µ—Ä–æ–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–∏–Ω—Ç–µ–∑—É...")
            press_enter_to_continue()
            break
            
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–µ—Ä–æ–∏:")
        print("-" * 40)
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤
        sorted_available = sorted(available_heroes, key=lambda x: (x.star, x.level), reverse=True)
        
        for i, hero in enumerate(sorted_available, 1):
            star_display = VisualEffects.get_star_display(hero.star)
            status = "‚úÖ" if hero in sacrifices else "  "
            # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
            name_padding = 18 - len(hero.name)
            print(f"{status} {i}. {hero.name}{' ' * name_padding}{star_display} (–£—Ä. {hero.level})")
        
        print("‚ïê" * 40)
        print("–ö–æ–º–∞–Ω–¥—ã:")
        print("C - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≤—ã–±–æ—Ä—ã")
        print("F - –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–±–æ—Ä")
        print("0 - ‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞")
        print("‚ïê" * 40)
        
        try:
            choice = input("üéØ –í–∞—à –≤—ã–±–æ—Ä: ").strip().upper()
            
            if choice == "0":
                return None
            elif choice == "F":
                break
            elif choice == "C":
                sacrifices.clear()
                print("‚úÖ –í—ã–±–æ—Ä—ã –æ—á–∏—â–µ–Ω—ã")
                continue
            elif choice.isdigit():
                choice_num = int(choice)
                if 1 <= choice_num <= len(sorted_available):
                    selected_hero = sorted_available[choice_num - 1]
                    if selected_hero in sacrifices:
                        sacrifices.remove(selected_hero)
                        print(f"‚ùå –£–¥–∞–ª–µ–Ω: {selected_hero.name}")
                    else:
                        sacrifices.append(selected_hero)
                        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {selected_hero.name}")
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä!")
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                
            press_enter_to_continue()
            
        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!")
            press_enter_to_continue()
    
    return sacrifices

def show_all_available_heroes(heroes):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –∑–≤–µ–∑–¥–∞–º"""
    print_header("üìã –í–°–ï –î–û–°–¢–£–ü–ù–´–ï –ì–ï–†–û–ò")
    print("–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∂–∏–≤—ã—Ö –≥–µ—Ä–æ–µ–≤:")
    print("‚ïê" * 50)
    
    if not heroes:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤!")
        press_enter_to_continue()
        return
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –≥–µ—Ä–æ–µ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–≤–µ–∑–¥
    heroes_by_stars = {}
    for hero in heroes:
        if hero.star not in heroes_by_stars:
            heroes_by_stars[hero.star] = []
        heroes_by_stars[hero.star].append(hero)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∑–≤–µ–∑–¥
    sorted_stars = sorted(heroes_by_stars.keys(), reverse=True)
    
    for star_level in sorted_stars:
        star_group = heroes_by_stars[star_level]
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥–µ—Ä–æ–µ–≤ –≤ –≥—Ä—É–ø–ø–µ –ø–æ —É—Ä–æ–≤–Ω—é
        sorted_heroes = sorted(star_group, key=lambda x: x.level, reverse=True)
        
        # –í—ã–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≥—Ä—É–ø–ø—ã –∑–≤–µ–∑–¥
        star_display = VisualEffects.get_star_display(star_level)
        print(f"\nüåü {star_display} –ì–µ—Ä–æ–∏ ({len(sorted_heroes)}):")
        print("-" * 40)
        
        for i, hero in enumerate(sorted_heroes, 1):
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –æ—Ç—Å—Ç—É–ø–∞–º–∏
            name_part = f"{hero.name:<15}"
            level_part = f"–£—Ä. {hero.level:>2}"
            
            print(f"  {i:2d}. {name_part}{level_part}")
    
    print("‚ïê" * 50)
    press_enter_to_continue()

def show_synthesis_preview(base_hero, sacrifices):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–∏–Ω—Ç–µ–∑–∞"""
    print_header("‚öóÔ∏è –ü–†–ï–î–ü–†–û–°–ú–û–¢–† –°–ò–ù–¢–ï–ó–ê")
    print(f"üéØ –û—Å–Ω–æ–≤–Ω–æ–π –≥–µ—Ä–æ–π: {base_hero.name} (–£—Ä. {base_hero.level})")
    print("üî• –ñ–µ—Ä—Ç–≤—ã:")
    
    total_value = 0
    for hero in sacrifices:
        hero_value = hero.level * 50
        total_value += hero_value
        print(f"   - {hero.name} (–£—Ä. {hero.level}) ‚Üí {hero_value} –æ–ø—ã—Ç–∞")
    
    print("‚ïê" * 40)
    
    # –†–∞—Å—á–µ—Ç –±–æ–Ω—É—Å–æ–≤
    stat_bonus_chance = 0.1 * len(sacrifices)  # 10% –∑–∞ –∫–∞–∂–¥–æ–≥–æ –≥–µ—Ä–æ—è
    
    print(f"üìä –û–±—â–∏–π –æ–ø—ã—Ç: {total_value}")
    print(f"üìà –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: ~{base_hero.level + (total_value // 100)}")
    print(f"üé≤ –®–∞–Ω—Å —É—Å–∏–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {stat_bonus_chance*100:.1f}%")
    print("‚ïê" * 40)

def confirm_synthesis():
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–∏–Ω—Ç–µ–∑–∞"""
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ì–µ—Ä–æ–∏-–∂–µ—Ä—Ç–≤—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞!")
    print("1. ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–∏–Ω—Ç–µ–∑")
    print("0. ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    print("‚ïê" * 40)
    
    try:
        confirm = input("üéØ –í–∞—à –≤—ã–±–æ—Ä: ").strip()
        return confirm == "1"
    except (ValueError, KeyboardInterrupt):
        print("‚ùå –°–∏–Ω—Ç–µ–∑ –æ—Ç–º–µ–Ω—ë–Ω")
        return False

def show_synthesis_result(result_message, stat_improved, sacrifices_count):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ç–µ–∑–∞"""
    print_header("‚ú® –†–ï–ó–£–õ–¨–¢–ê–¢ –°–ò–ù–¢–ï–ó–ê")
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if "‚ú®" in result_message:
        # –ï—Å–ª–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —É–∂–µ –µ—Å—Ç—å —ç–º–æ–¥–∑–∏ —É—Å–∏–ª–µ–Ω–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        print(result_message)
    else:
        # –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        lines = result_message.split('\n')
        for line in lines:
            if line.strip():  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                print(line)
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–æ! –£–¥–∞–ª–µ–Ω–æ –≥–µ—Ä–æ–µ–≤: {sacrifices_count}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    if stat_improved:
        print(f"üéâ –ü–æ–ª—É—á–µ–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ: +1 –∫ {stat_improved}!")
    
    print("‚ïê" * 40)