# tower_ui.py
# ui/tower_ui.py
from ui.ui_utils import print_header, press_enter_to_continue, loading_screen, clear_screen
import time

def display_tower_header(title):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –±–∞—à–Ω–∏"""
    clear_screen()
    print("=" * 50)
    print(f"=== {title.upper()} ===")
    print("=" * 50)
    print()

def show_tower_management_menu(game_state):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞—à–Ω–µ–π"""
    display_tower_header("üè∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ë–∞—à–Ω–µ–π –ò—Å–ø—ã—Ç–∞–Ω–∏–π")
    
    current_floor = game_state["tower_level"]
    heroes_available = sum(1 for hero in game_state["heroes"] if hero.is_alive)
    
    print(f"üìä –¢–µ–∫—É—â–∏–π —ç—Ç–∞–∂: {current_floor}")
    print(f"üéØ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤: {heroes_available}")
    print(f"üí∞ –ó–æ–ª–æ—Ç–æ: {game_state['wallet'].gold}")
    
    print("\n1. ‚öîÔ∏è  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –±–∞—à–Ω—é")
    print("2. üìà –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å")
    print("3. üè• –õ–µ—á–∏—Ç—å –≤—Å–µ—Ö –≥–µ—Ä–æ–µ–≤ (100 –∑–æ–ª–æ—Ç–∞)")
    print("0. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    print()
    
    try:
        return int(input("–í—ã–±–æ—Ä: "))
    except ValueError:
        return None

def show_party_selection(available_parties, required_groups, game_state):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø –¥–ª—è –±–∞—à–Ω–∏"""
    display_tower_header("‚öîÔ∏è –í—ã–±–æ—Ä –±–æ–µ–≤—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –±–∞—à–Ω–∏")

    for i, (party_id, party_data) in enumerate(available_parties, 1):
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≥–µ—Ä–æ–µ–≤ –∏–∑ game_state
        hero_objects = []
        for hero_id in party_data["heroes"]:
            for hero in game_state["heroes"]:
                if id(hero) == hero_id:
                    hero_objects.append(hero)
                    break
        
        hero_names = ", ".join([h.name for h in hero_objects]) if hero_objects else "‚Äî –ø—É—Å—Ç–æ ‚Äî"
        print(f"{i}. {party_data['name']} ‚Üí [{hero_names}]")

    print(f"\n–≠—Ç–∞–∂ —Ç—Ä–µ–±—É–µ—Ç –≥—Ä—É–ø–ø: {required_groups}")
    print("0. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")
    return input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()

def show_expedition_preview(active_party_heroes, current_floor):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤—ã–ª–∞–∑–∫–∏"""
    display_tower_header("üè∞ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤—ã–ª–∞–∑–∫–µ")
    
    print(f"üìä –¢–µ–∫—É—â–∏–π —ç—Ç–∞–∂: {current_floor}")
    print("üéØ –°–æ—Å—Ç–∞–≤ –æ—Ç—Ä—è–¥–∞:")
    print("-" * 30)

    for i, hero in enumerate(active_party_heroes, 1):
        status = "‚úÖ –ì–æ—Ç–æ–≤" if hero.is_alive else "‚ùå –ù–µ—Å–ø–æ—Å–æ–±–µ–Ω"
        star_symbol = "‚òÖ" * hero.star
        print(f"{i}. {hero.name} {star_symbol}")
        print(f"   üìà –£—Ä. {hero.level} | {status}")
        print(f"   ‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {hero.health_current}/{hero.health_max}")
    
    print("\n1. ‚öîÔ∏è –ù–∞—á–∞—Ç—å –≤—ã–ª–∞–∑–∫—É")
    print("0. ‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ–º–∞–Ω–¥–Ω—ã–π —Ü–µ–Ω—Ç—Ä")
    print()
    
    try:
        return int(input("–í—ã–±–æ—Ä: "))
    except ValueError:
        return None

def show_victory_screen(reward, total_exp, new_floor, dead_heroes):
    """–ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –ø–æ–±–µ–¥—ã"""
    display_tower_header("üéâ –ü–û–ë–ï–î–ê!")
    print(f"üí∞ –ù–∞–≥—Ä–∞–¥–∞: {reward} –∑–æ–ª–æ—Ç–∞")
    print(f"üìà –ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞: {total_exp}")
    
    if dead_heroes:
        print("üíÄ –ü–æ–≥–∏–±—à–∏–µ –≤ –±–æ—é:")
        for hero in dead_heroes:
            print(f"- {hero.name}")
    
    print(f"üèÜ –î–æ—Å—Ç—É–ø–µ–Ω —ç—Ç–∞–∂ {new_floor}")
    press_enter_to_continue()

def show_defeat_screen(dead_heroes, retreat_floor):
    """–ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –ø–æ—Ä–∞–∂–µ–Ω–∏—è"""
    display_tower_header("üí• –ü–û–†–ê–ñ–ï–ù–ò–ï")
    print("üíÄ –ü–æ–≥–∏–±—à–∏–µ:")
    for hero in dead_heroes:
        print(f"- {hero.name} (–£—Ä. {hero.level})")
    
    print(f"üîô –û—Ç—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∫ —ç—Ç–∞–∂—É {retreat_floor}")
    press_enter_to_continue()

def show_tower_progress(game_state, floor_info):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—à–Ω–∏"""
    display_tower_header("üè∞ –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –ë–∞—à–Ω–µ –ò—Å–ø—ã—Ç–∞–Ω–∏–π")
    
    current_floor = game_state["tower_level"]
    max_floor_reached = game_state.get("max_tower_floor", current_floor)
    
    print(f"üìä –¢–µ–∫—É—â–∏–π —ç—Ç–∞–∂: {current_floor}")
    print(f"üèÜ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–π: {max_floor_reached}")
    print(f"üí∞ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–∂: {current_floor * 25} –∑–æ–ªota")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω—Å—Ç—Ä–∞—Ö
    print(f"\n{floor_info}")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö
    if current_floor % 5 == 0:
        next_boss_floor = current_floor + 5
        print(f"‚ö†Ô∏è  –°–ª–µ–¥—É—é—â–∏–π –±–æ—Å—Å –Ω–∞ —ç—Ç–∞–∂–µ: {next_boss_floor}")
    elif (current_floor + 1) % 5 == 0:
        print(f"‚ö° –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–∂: –ë–û–°–°-–ë–û–ô!")
    
    if current_floor % 10 == 0:
        next_multi_party_floor = current_floor + 10
        print(f"üë• –ù–∞ —ç—Ç–∞–∂–µ {next_multi_party_floor} –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è 2 –≥—Ä—É–ø–ø—ã")
    
    print("\n–û—Å–æ–±—ã–µ —ç—Ç–∞–∂–∏:")
    for floor in [5, 10, 15, 20, 25, 30, 35, 40, 45, 50]:
        if floor <= max_floor_reached + 5:
            status = "‚úÖ –ü—Ä–æ–π–¥–µ–Ω" if current_floor > floor else "üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" if current_floor < floor else "üéØ –¢–µ–∫—É—â–∏–π"
            if floor % 5 == 0:
                print(f"  {floor}F - –ë–æ—Å—Å - {status}")
            else:
                print(f"  {floor}F - –û–±—ã—á–Ω—ã–π - {status}")
    
    press_enter_to_continue()

def show_healing_confirmation(wounded_count, cost):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–µ—á–µ–Ω–∏—è"""
    display_tower_header("üè• –õ–µ—á–µ–Ω–∏–µ –≥–µ—Ä–æ–µ–≤")
    print(f"üíä –õ–µ—á–µ–Ω–∏–µ {wounded_count} –≥–µ—Ä–æ–µ–≤: {cost} –∑–æ–ª–æ—Ç–∞")
    print("1. ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ")
    print("0. ‚ùå –û—Ç–º–µ–Ω–∞")
    print()
    
    try:
        return int(input("–í—ã–±–æ—Ä: "))
    except ValueError:
        return None