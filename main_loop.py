# main_loop.py
from ui.ui_utils import clear_screen, loading_screen, print_header
from game_data.game_state import game_state
from ui.tower_menu import tower_menu
from ui.heroes_menu import heroes_menu
from ui.buildings_menu import buildings_menu
from systems.hero_system import Hero
from systems.achievement_system import AchievementSystem
from ui.achievements_menu import achievements_menu

def initialize_game():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–≥—Ä—É —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∫–∏"""
    print_header("üèùÔ∏è –õ–µ—Ç–∞—é—â–∏–π –æ—Å—Ç—Ä–æ–≤ - –ó–∞–≥—Ä—É–∑–∫–∞")
    game_state["achievement_system"] = AchievementSystem()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
    save_info = game_state["save_system"].get_save_info(1)
    if save_info:
        print("üíæ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ:")
        print(f"   –≠—Ç–∞–∂: {save_info['tower_level']}")
        print(f"   –ì–µ—Ä–æ–µ–≤: {save_info['hero_count']}")
        print(f"   –ó–æ–ª–æ—Ç–æ: {save_info['gold']}")
        print(f"   –í—Ä–µ–º—è: {save_info['timestamp'][:10]}")
        print("\n1. üéÆ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É")
        print("2. üÜï –ù–æ–≤–∞—è –∏–≥—Ä–∞")
        
        try:
            choice = int(input("\nüéØ –í–∞—à –≤—ã–±–æ—Ä: "))
            if choice == 1:
                if game_state["save_system"].load_game(game_state, 1):
                    loading_screen(2, "–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
                    print("‚úÖ –ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
                    return True
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏!")
                    loading_screen(1)
        except ValueError:
            pass
    
    # –ù–æ–≤–∞—è –∏–≥—Ä–∞
    loading_screen(2, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∏—Ä–∞")
    return True

def check_new_unlocks(game_state):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"""
    tower_level = game_state["tower_level"]
    unlocks = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    research_mgr = game_state["research"]
    for research_key, research in research_mgr.researches.items():
        if research.level < research.max_level:
            next_level = research.level + 1
            if next_level <= len(research.reveal_floors):
                required_floor = research.reveal_floors[next_level - 1]
                if tower_level >= required_floor and research.level < next_level:
                    unlocks.append(f"üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: {research.name} —É—Ä.{next_level}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –Ω–µ–ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ)
    building_manager = game_state["buildings"]
    building_manager.unlock_buildings(tower_level)  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    
    for building in building_manager.buildings.values():
        if (tower_level >= building.unlock_floor and 
            not building.built and 
            building.level == 0 and
            building.unlocked):
            unlocks.append(f"üèóÔ∏è {building.name} (–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏)")
    
    return unlocks

def main_menu():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã"""
    if not initialize_game():
        return
    
    while True:
        # –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∑–¥–∞–Ω–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —ç—Ç–∞–∂–µ–π
        game_state["buildings"].unlock_buildings(game_state["tower_level"])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        achievement_system = game_state["achievement_system"]
        new_achievements = achievement_system.check_building_achievements(game_state)

        print_header("üèùÔ∏è –õ–µ—Ç–∞—é—â–∏–π –æ—Å—Ç—Ä–æ–≤ - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –ª–æ–±–±–∏")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        wallet = game_state["wallet"]
        print(f"üí∞ {wallet}")
        print(f"üè∞ –≠—Ç–∞–∂ –±–∞—à–Ω–∏: {game_state['tower_level']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ù–ï–ü–†–û–°–ú–û–¢–†–ï–ù–ù–´–ï –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        unviewed_achievements = achievement_system.get_unviewed_achievements()
        completed_count = achievement_system.get_completed_count()
        
        if unviewed_achievements:
            print(f"üèÜ –ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: {len(unviewed_achievements)}")
            for ach in unviewed_achievements[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 2
                print(f"   ‚≠ê {ach.name}")
        elif completed_count > 0:
            print(f"üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: {completed_count}/? (–≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã)")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –Ω–µ–ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∑–¥–∞–Ω–∏—è)
        new_unlocks = check_new_unlocks(game_state)
        if new_unlocks:
            print("üéâ –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
            for unlock in new_unlocks:
                print(f"   {unlock}")
            print()

        dormitory = game_state["buildings"].get_building("dormitory")
        hero_count = len(game_state["heroes"])
        max_capacity = dormitory.get_capacity()
        print(f"üë• –ì–µ—Ä–æ–∏: {hero_count}/{max_capacity}")
        print()
        
        # –ú–µ–Ω—é
        print("1. üè∞ –ë–∞—à–Ω—è –∏—Å–ø—ã—Ç–∞–Ω–∏–π")
        print("2. üéØ –ì–µ—Ä–æ–∏")
        print("3. üèõÔ∏è –ó–¥–∞–Ω–∏—è")
        print("4. üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        print("5. üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")
        print("0. üö™ –í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã")
        print()
        
        try:
            choice = int(input("üéØ –í–∞—à –≤—ã–±–æ—Ä: "))
        except ValueError:
            loading_screen(1, "‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞")
            continue
        
        if choice == 1:
            loading_screen(1.5, "üåÄ –ü–µ—Ä–µ—Ö–æ–¥")
            tower_menu(game_state)

        elif choice == 2:
            heroes_menu(game_state)

        elif choice == 3:
            loading_screen(1.5, "üåÄ –ü–µ—Ä–µ—Ö–æ–¥")
            buildings_menu(game_state)

        elif choice == 4:
            from ui.save_menu import save_menu
            save_menu(game_state)

        elif choice == 5:
            achievements_menu(game_state)

        elif choice == 0:
            loading_screen(1.5, "üåÄ –ü–µ—Ä–µ—Ö–æ–¥")
            print_header("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            print("‚ú® –°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏–≥—Ä–∞–ª–∏ –≤ TrueWorld! –ú—ã –∂–¥—ë–º –≤–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è, –º–∞—Å—Ç–µ—Ä!")
            break

        else:
            loading_screen(1, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
  main_menu()